{
  "name": "duel-de-dame",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev:front": "next dev",
    "dev:back": "cd api && npx tsc src/main.ts --outDir dist --target ES2020 --module commonjs --experimentalDecorators --emitDecoratorMetadata --watch",
    "dev:back:run": "cd api && node dist/main.js",
    "dev": "concurrently \"npm:dev:front\" \"npm:dev:back\" \"npm:dev:back:run\"",
    "build:front": "next build",
    "build:back": "cd api && npx tsc src/main.ts --outDir dist --target ES2020 --module commonjs --experimentalDecorators --emitDecoratorMetadata",
    "build": "npm run build:front && npm run build:back",
    "build:back:fresh": "npm run clean:back && npm run db:reset && npm run build:back",
    "build:fresh": "npm run clean && npm run db:reset && npm run build",
    "start:front": "next start",
    "start:back": "cd api && node dist/main.js",
    "start": "concurrently \"npm run start:front\" \"npm run start:back\"",
    "clean:front": "node -e \"const fs=require('fs');const p='.next';try{fs.rmSync(p,{recursive:true,force:true})}catch{};console.log('Cleaned',p);\"",
    "clean:back": "node -e \"const fs=require('fs');const p='api/dist';try{fs.rmSync(p,{recursive:true,force:true})}catch{};console.log('Cleaned',p);\"",
    "clean": "npm run clean:front && npm run clean:back",
    "format": "prettier --write \"api/src/**/*.ts\" \"api/test/**/*.ts\"",
    "lint": "eslint \"{api/src,api/test,src}/**/*.ts\" --fix",
    "test:back": "jest --config api/jest.config.js",
    "test:front": "echo 'Ajoute ici tes tests front si besoin'",
    "test:engine": "jest --config jest.config.js",
    "test:engine:coverage": "jest --config jest.config.js --coverage",
    "test:engine:watch": "jest --config jest.config.js --watch",
    "test": "npm run test:back && npm run test:engine",
    "db:reset": "node -e \"const fs=require('fs');['api/data/duel-de-dame.sqlite','duel-de-dame.sqlite','api/duel-de-dame.sqlite'].forEach(f=>{try{fs.rmSync(f,{force:true})}catch{}}); console.log('DB reset: SQLite files removed');\"",
    "db:backup": "node -e \"const fs=require('fs'),path=require('path');const time=new Date().toISOString().replace(/[:.]/g,'-');const dir='backups';try{fs.mkdirSync(dir,{recursive:true})}catch{};['api/data/duel-de-dame.sqlite'].forEach(src=>{if(fs.existsSync(src)){const base=path.basename(src).replace('.sqlite','');const dest=path.join(dir,base+'-'+time+'.sqlite');fs.copyFileSync(src,dest);console.log('Backup:',src,'->',dest)}});\"",
    "db:info": "node -e \"const fs=require('fs');['api/data/duel-de-dame.sqlite'].forEach(f=>{if(fs.existsSync(f)){const s=fs.statSync(f).size;console.log(f, (s/1024).toFixed(1)+'KB')}else{console.log(f,'(absent)')}});\"",
    "db:init": "node -e \"const fs=require('fs');fs.mkdirSync('api/data',{recursive:true});if(!fs.existsSync('api/data/duel-de-dame.sqlite')){fs.writeFileSync('api/data/duel-de-dame.sqlite','');console.log('Created api/data/duel-de-dame.sqlite')}else{console.log('DB file already exists: api/data/duel-de-dame.sqlite')}\""
  },
  "dependencies": {
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/platform-socket.io": "^11.1.3",
    "@nestjs/typeorm": "^11.0.0",
    "@nestjs/websockets": "^11.1.3",
    "@types/howler": "^2.2.12",
    "howler": "^2.2.4",
    "next": "14.1.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.7.5",
    "sqlite3": "^5.1.7",
    "typeorm": "^0.3.27"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@swc/cli": "^0.6.0",
    "@swc/core": "^1.10.7",
    "@types/express": "^5.0.0",
    "@types/jest": "^29.0.0",
    "@types/node": "^22.10.7",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/supertest": "^6.0.2",
    "autoprefixer": "^10.4.17",
    "concurrently": "^8.0.0",
    "eslint": "^9.18.0",
    "eslint-config-next": "14.1.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.0.0",
    "postcss": "^8.4.35",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "tailwindcss": "^3.4.1",
    "ts-jest": "^29.0.0",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  }
}
